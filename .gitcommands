### delete file
git rm <file-name>

### remove specific file from git cache
git rm --cached <file-name>

### remove all files from git cache
git rm -r --cached .
git add .
git commit -m "gitignore cache updated"

### log
git log

### move to specific commit
git reset --hard <commit-hash> // откатить файлы на состояние определенного коммита, указатель: <хеш коммита>

### check current branch
git branch

### remove current branch
git branch -d [-r (remote)] <branch-name>

### rename current branch
git checkout <old-branch-name>
git branch -m <old-branch-name> <new-branch-name>

### checkout to specific branch
git checkout [-b (create)] <branch-name>

### merge branches
git merge <branch-name>

### check remote storages
git remote -v

### get changes from remote repo
git fetch

### git fetch + git merge
git pull

### stash
git stash                      ### hide local changes
git stash apply stash@{0}@{0}  ### return uncommited local changes (@{0} - name of stash item)
git stash list                 ### show list of uncommited changes
git stash clear                ### clear list of uncommited changes

### resolved this error by updating username and credentials:
git config user.name "user-name"        
git config credential.username "user-name"
git config user.email "user-email"

### push new branch to remote storage
git push -u <origin> (name of remote storage) <master> (name of local branch)

### exclude .gitignore only local files
.git/info/exclude (exclude .gitignore only local files (don't push changes to remote .gitignore file))
git update-index --assume-unchanged <file-name>
git update-index --no-assume-unchanged <file-name>

### remove a single file from the staging area for git
git reset HEAD -- <file> OR <dir>

### delete your local branch
git branch -d (-D) <branch-name>

### check ssh keys
ls ~/.ssh

### find ssh keys (address)
find ~/.ssh

### ssh-key generate
ssh-keygen -t ed25519 -C "<comment>"

### copy ssh key to clipboard
pbcopy < ~/.ssh/id_ed25519.pub

### if you prefer subshells, you could try the following (though it is more fragile):
ssh-agent $(ssh-add /somewhere/yourkey; git clone git@github.com:user/project.git <folder name>)
example: ssh-agent $(ssh-add ~/.ssh/Vladimir988; git clone git@github.com:Vladimir988/Redux.git redux)

### check remote repository
git remote -v

### delete remote repository from your local (origin as usual)
git remote remove <branch-name> - (origin as usual)

### find ssh keys (address)
git remote add <name-remote-ssh-hub> <ssh-link> (git@github.com:Vladimir988/Laravel-Ci-Cd.git)
