git add .   ------------------ // добавить все файлы в индекс
git rm <имя файла>   --------- // удалить файл
git rm --cached <имя файла>    // убрать файл из индекса гита
touch <имя файла>   ---------- // создай файл
git commit   ----------------- // зафиксируй состояние (сделай слепок проекта)
                                  :: флаг -a в место комманды: git add . (git commit -a "имя коммита")
                                  :: флаг -m ***********************************************************
git log   -------------------- // лог
git reset --hard <хеш коммита> // откатить файлы на состояние определенного коммита, указатель: <хеш коммита>
git branch   ----------------- // посмотреть текущую ветку
                                  :: флаг -d удалить ветку (git branch -d second_branch)
                                  :: -r (remote)
git checkout <имя ветки>   --- // переключится на <имя ветки>
                                  :: флаг -b создать ветку если её не существует (git checkout -b second_branch)
git merge <имя ветки>   ------ // слияние указаной ветки (<имя ветки>) с текущей
git remote -v           ------ // check remote storages
git fetch               ------ // get changes from remote repo
git pull                ------ // git fetch + git merge

git stash                     ------ // hide local changes
git stash apply stash@{0}@{0} ------ // return uncommited local changes ( @{0} - name of stash item )
git stash list                ------ // show list of uncommited changes

// Resolved this error by updating my username and credentials:
git config user.name "user-name"        
git config credential.username "user-name"
git config user.email "user-email"
git push -u origin <name of remote storage> main <name of local branch>

.git/info/exclude (exclude .gitignore only local files (don't push changes to remote .gitignore file))
git update-index --assume-unchanged YOUR-FILE
git update-index --no-assume-unchanged YOUR-FILE


git reset HEAD -- <file> OR <directoryName>   ------ // remove a single file from the staging area for git
git branch -d (-D) local_branch               ------ // delete your local branch


ls ~/.ssh                                     ------ // check ssh keys
find ~/.ssh                                   ------ // find ssh keys (address)

ssh-keygen -t ed25519 -C "<comment>"          ------ // ssh-key generate
pbcopy < ~/.ssh/id_ed25519.pub                ------ // copy ssh key to clipboard

git remote add <name-remote-ssh-hub> <ssh-link> (git@github.com:Vladimir988/Laravel-Ci-Cd.git)  ------ // find ssh keys (address)
